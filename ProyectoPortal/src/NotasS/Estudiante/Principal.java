/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NotasS.Estudiante;

import Conexion.ConexionJPA;
import NotasS.ClaseListEntregaActiv;
import NotasS.ClaseListEstuSeccion;
import NotasS.ClaseListSecCurso;
import NotasS.ClaseListaPorCurso;
import NotasS.ClasePorSeccCurso_EstuSecc;
import NotasS.ClaseSecCurso_EstSecc_EntAct;
import NotasS.ListaEntregaActiv;
import NotasS.ListaEstuSeccion;
import NotasS.ListaSecCurso;
import NotasS.ListaSecCurso_EstuSec;
import NotasS.ListaSecCurso_EstuSec_EntAct;
import Tablas.Persona;
import java.text.DateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.persistence.Query;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saul
 */
public class Principal extends javax.swing.JFrame {

    List<ListaSecCurso_EstuSec_EntAct> miLista;
    public int usuarioEstId = 2;
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        cargarDatos();
        deshabilitarText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaNotas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldFacultad = new javax.swing.JTextField();
        jTextFieldCarrera = new javax.swing.JTextField();
        jTextFieldCurso = new javax.swing.JTextField();
        jTextFieldCatedratico = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNotaTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TablaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Actividad", "Titulo", "FechaEntrega", "FechaPublicacion", "Valoracion", "ActividadFisica", "ActividadVirtual", "Entrega", "Calificacion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaNotas);
        if (TablaNotas.getColumnModel().getColumnCount() > 0) {
            TablaNotas.getColumnModel().getColumn(0).setResizable(false);
            TablaNotas.getColumnModel().getColumn(1).setResizable(false);
            TablaNotas.getColumnModel().getColumn(2).setResizable(false);
            TablaNotas.getColumnModel().getColumn(3).setResizable(false);
            TablaNotas.getColumnModel().getColumn(4).setResizable(false);
            TablaNotas.getColumnModel().getColumn(5).setResizable(false);
            TablaNotas.getColumnModel().getColumn(6).setResizable(false);
            TablaNotas.getColumnModel().getColumn(7).setResizable(false);
            TablaNotas.getColumnModel().getColumn(8).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        jLabel1.setText("ESTUDIANTE");

        jLabel2.setText("Facultad:");

        jLabel3.setText("Carrera:");

        jLabel4.setText("Catedratico:");

        jLabel5.setText("Curso:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(94, 94, 94)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCatedratico, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCatedratico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(23, 23, 23))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        jLabel6.setText("Nota total:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNotaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldNotaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaNotas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCarrera;
    private javax.swing.JTextField jTextFieldCatedratico;
    private javax.swing.JTextField jTextFieldCurso;
    private javax.swing.JTextField jTextFieldFacultad;
    private javax.swing.JTextField jTextFieldNotaTotal;
    // End of variables declaration//GEN-END:variables

    private void cargarDatos() {
        int UsuaCatId = 4;
        int Cursoid = 5;
        int SeccionId = 2;
        ClaseListSecCurso miClaseLisSecCurso = new ClaseListSecCurso();
        List<ListaSecCurso> miListaSecCurso = miClaseLisSecCurso.cargarDatosListSeccionCurso(UsuaCatId);
        ClaseListaPorCurso miListaPorCurso = new ClaseListaPorCurso();
        miListaSecCurso = miListaPorCurso.encontraPorCurso(miListaSecCurso, Cursoid, SeccionId);
        
        
        ClaseListEstuSeccion miClaseLisEstuSecc = new ClaseListEstuSeccion();
        List<ListaEstuSeccion> miListaEstuSecc = miClaseLisEstuSecc.cargarListaEstudianteSeccion();
        ClasePorSeccCurso_EstuSecc miClasPorSecCur = new ClasePorSeccCurso_EstuSecc();
        miClasPorSecCur.setMiListSeccionCurso(miListaSecCurso);
        miClasPorSecCur.setMiListEstuSeccion(miListaEstuSecc);
        List<ListaSecCurso_EstuSec> miListaSecCurso_EstuSec = miClasPorSecCur.cargarDatosListasSecCurso_EstuSecc();
        
        
        
        ClaseListEntregaActiv miClaseLisEntActiv = new ClaseListEntregaActiv();
        List<ListaEntregaActiv> miListaEntAct = miClaseLisEntActiv.cargarDatosListEntregaActividad();
        ClaseSecCurso_EstSecc_EntAct miClaseSecCur_EstuSec_EntrActi = new ClaseSecCurso_EstSecc_EntAct();
        miClaseSecCur_EstuSec_EntrActi.setMiListEntAct(miListaEntAct);
        miClaseSecCur_EstuSec_EntrActi.setMiListSecCur_EstuSecc(miListaSecCurso_EstuSec);
        List<ListaSecCurso_EstuSec_EntAct> miListaSecCurs_EstuSec_EntrActi = miClaseSecCur_EstuSec_EntrActi.cargarDatosSecCur_EstuSuc_EntAct();
        
        miLista = miListaSecCurs_EstuSec_EntrActi;
        
        DefaultTableModel miTablaNotas = (DefaultTableModel) TablaNotas.getModel();
        int cont = 0;
        Iterator<ListaSecCurso_EstuSec_EntAct> iteradorLisSecCur_EstuSec_EntAct = miLista.iterator();
        while (iteradorLisSecCur_EstuSec_EntAct.hasNext()) { 
            ListaSecCurso_EstuSec_EntAct ListaSecCur_EstSec_EntAct = iteradorLisSecCur_EstuSec_EntAct.next();
            
            if (ListaSecCur_EstSec_EntAct.getUsuarioEstId() == usuarioEstId) {
                if (cont == 0) {
                    Query qPerso = ConexionJPA.getInstance("usuario", "usuario").getEm().createNamedQuery("Persona.findById");
                    qPerso.setParameter("id", ListaSecCur_EstSec_EntAct.PersonaCatId);
                    Persona miPersona = new Persona();
                    miPersona = (Persona) qPerso.getSingleResult();
                    
                    this.jTextFieldCarrera.setText(ListaSecCur_EstSec_EntAct.getCarrera());
                    this.jTextFieldCatedratico.setText(miPersona.getNombre() + " " + miPersona.getApellido());
                    this.jTextFieldCurso.setText(ListaSecCur_EstSec_EntAct.getCurso());
                    this.jTextFieldFacultad.setText(ListaSecCur_EstSec_EntAct.getFacultad());
                    
                }
                
                if (ListaSecCur_EstSec_EntAct.getEntregaRealizada() == Boolean.TRUE) {
                    Date mid = ListaSecCur_EstSec_EntAct.getActividadFechaEntrega();
                    DateFormat miFe = DateFormat.getDateInstance();
                    String miFec = miFe.format(mid);
                    
                    Date mid2 = ListaSecCur_EstSec_EntAct.getActividadFechaPublicacion();
                    DateFormat miFe2 = DateFormat.getDateInstance();
                    String miFec2 = miFe2.format(mid2);
                    
                    Object [] datosFila = {ListaSecCur_EstSec_EntAct.getTipoActividadDescripcion(), ListaSecCur_EstSec_EntAct.getActividadTitulo(), miFec, miFec2, ListaSecCur_EstSec_EntAct.getActividadPunteo(), ListaSecCur_EstSec_EntAct.getActividadFisica(), ListaSecCur_EstSec_EntAct.getActividadVirtual(), "Realizada", ListaSecCur_EstSec_EntAct.EntregaCalificacion};
                    miTablaNotas.addRow(datosFila);
                } else {
                    
                    Date mid = ListaSecCur_EstSec_EntAct.getActividadFechaEntrega();
                    DateFormat miFe = DateFormat.getDateInstance();
                    String miFec = miFe.format(mid);
                    
                    Date mid2 = ListaSecCur_EstSec_EntAct.getActividadFechaPublicacion();
                    DateFormat miFe2 = DateFormat.getDateInstance();
                    String miFec2 = miFe2.format(mid2);
                    
                    Object [] datosFila = {ListaSecCur_EstSec_EntAct.getTipoActividadDescripcion(), ListaSecCur_EstSec_EntAct.getActividadTitulo(), ListaSecCur_EstSec_EntAct.getActividadFechaEntrega(), ListaSecCur_EstSec_EntAct.getActividadFechaPublicacion(), ListaSecCur_EstSec_EntAct.getActividadPunteo(), ListaSecCur_EstSec_EntAct.getActividadFisica(), ListaSecCur_EstSec_EntAct.getActividadVirtual(), "No realizada", ListaSecCur_EstSec_EntAct.EntregaCalificacion};
                    miTablaNotas.addRow(datosFila);
                }
                
            }
        }
        Double nota = 0.0;
        if (TablaNotas.getRowCount() > 0) {
            for (int i = 0; i < TablaNotas.getRowCount(); i++) {
                nota = nota + Double.parseDouble(TablaNotas.getValueAt(i, 8).toString());
            }
        }
        this.jTextFieldNotaTotal.setText(nota + "");
        
    }

    private void deshabilitarText() {
        this.jTextFieldCarrera.setEnabled(Boolean.FALSE);
        this.jTextFieldCatedratico.setEnabled(Boolean.FALSE);
        this.jTextFieldCurso.setEnabled(Boolean.FALSE);
        this.jTextFieldFacultad.setEnabled(Boolean.FALSE);
        this.jTextFieldNotaTotal.setEnabled(Boolean.FALSE);
    }
}
